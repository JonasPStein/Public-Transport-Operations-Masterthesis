Set
i Trips /01*44/
s stations /01*15/
Ji(i,i) feasible trips;


alias(i,j);
alias(s,t);
sets
  Ji(i,i) Scheduled trip i compatible with  successors of node i
  st(i,s) Starting stations
  /(01,03,23,25).02, (02,24).07, (04,18,26,40).10, (05,27).03, (06,12,28,34).15, (07,09,11,29,31,33).04, (08,15,30,37).09, (10,14,21,32,36,43).12, (13,35).05, (16,20,38,42).11, (17,22,39,44).13, (19,41).14/
  en(i,s) Ending stations
  / (01,23).07, (02,04,24,26).02, (03,17,25,39).10, (05,11,27,33).15, (06,28).03, (07,16,29,38).09, (08,10,12,30,32,34).04, (09,13,22,31,35,44).12, (14,36).05, (15,19,37,41).11, (18,21,40,43).13, (20,42).14/
  ;
Parameters
 dt(i) Departure times at start stations of the scheduled trips
 / 01 494, 02 504, 03 494, 04 494, 05 499, 06 499, 07 484, 08 504, 09 499, 10 489, 11 484, 12 489, 13 484, 14 489, 15 484, 16 504, 17 494, 18 489, 19 499, 20 499, 21 494, 22 489, 23 519, 24 529, 25 519, 26 519, 27 524, 28 524, 29 509, 30 529, 31 524, 32 514, 33 509, 34 514, 35 509, 36 514, 37 509, 38 529, 39 519, 40 514, 41 524, 42 524, 43 524, 44 514                                                                  
 /
 at(i) Arrival times at end stations of the line trips
 / 01 534, 02 544, 03 544, 04 544, 05 539, 06 539, 07 579, 08 599, 09 534, 10 524, 11 569, 12 574, 13 569, 14 574, 15 509, 16 529, 17 594, 18 589, 19 614, 20 614, 21 609, 22 604, 23 559, 24 569, 25 569, 26 569, 27 564, 28 564, 29 604, 30 624, 31 559, 32 549, 33 594, 34 599, 35 594, 36 599, 37 534, 38 554, 39 619, 40 614, 41 639, 42 639, 43 639, 44 629
 /
;
table et(s,s) Empty travel times from station to station
       01       02     03      04      05      06     07       08      09       10       11      12     13       14     15
01     0       30      60      25      50      40     55       40      70       80       95      60     80       85     60
02    30        0      30      55      20      70     40       10      40       50       65      90     50       70     70
03    60       30       0      85      50      55     70       40      70       80       15     130     20      100     40
04    25       55      85       0      50      65     30       65      95       45       80      35    105      110     85
05    50       20      50      50       0      45     20       30      45       35       30      85     65       90     85
06    40       70      55      65      45       0     95       15      45      140       75      75     50       45     25
07    55       40      70      30      20      95      0       50     125       15       50      65     85       95    115
08    40       10      40      65      30      15     50        0      30       60       55     100     60       60     35
09    70       40      70      95      45      45    120       30       0       90       25     120     60       90     65
10    80       50      80      45      35     140     15       60      90        0       65      80    100      120     95
11    95       65      15      80      30      75     50       55      25       65        0     115     35      115     90
12    60       90     130      35      85      75     65      100     120       80      115       0    115       30     95
13    80       50      20     105      65      50     85       60      60      100       35     115      0       85     20
14    85       70     100     110      90      45     95       60      90      120      115      30     85        0     65
15    60       70      40      85      85      25    115       35      65       95       90      95     20       65      0

;
loop((en(i,s),st(j,t)),Ji(i,j)=(dt(j)>=at(i)+et(s,t))

);

*variables
Binary variable X(i,j);
Free variable F;

*Equations-Constraint
Equation objective;
objective..F=e=sum(Ji,x(Ji));

Equation destinationTrip;
destinationTrip(i)..sum(Ji(i,j),x(Ji))=l=1;

Equation originTrip;
originTrip(j)..sum(Ji(i,j),x(Ji))=l=1;

Model maxConnections /all/;
solve maxConnections max f using mip;

Display Ji,X.L;
